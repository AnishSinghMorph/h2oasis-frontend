name: H2Oasis Frontend CI/CD

on:
  push:
    branches: ["*"] # Run on all branches
  pull_request:
    branches: [main, develop] # PRs to main or develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          # Disable cache due to legacy-peer-deps conflicts
          # cache: "npm"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run TypeScript check
        run: npx tsc --noEmit

      - name: Run ESLint
        run: npm run lint || echo "Linting failed, continuing build process"
        continue-on-error: true

      - name: Check code formatting
        run: npm run format:check

      - name: Build for web
        run: npm run build:web

      - name: Build for production
        run: npm run build

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          # Disable cache due to legacy-peer-deps conflicts
          # cache: "npm"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run security audit
        run: npm audit --audit-level=high

      - name: Check for vulnerabilities
        run: npx audit-ci --config audit-ci.json

  expo-build:
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          # Disable cache due to legacy-peer-deps conflicts
          # cache: "npm"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Setup Expo CLI
        run: |
          npm install -g @expo/cli eas-cli
          echo "$(npm config get prefix)/bin" >> $GITHUB_PATH

      - name: Verify Expo CLI installation
        run: |
          which expo || echo "Expo not found in PATH"
          expo --version || echo "Expo version check failed"

      - name: Verify Expo Authentication
        run: |
          if command -v expo &> /dev/null; then
            echo "Using global expo CLI"
            expo whoami || echo "Not logged in, authenticating with token..."
          else
            echo "Using npx @expo/cli"
            npx @expo/cli whoami || echo "Not logged in, authenticating with token..."
          fi
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Configure EAS
        run: |
          if [ ! -f eas.json ]; then
            echo "Creating EAS configuration..."
            npx eas-cli build:configure --platform all --non-interactive
          else
            echo "EAS configuration already exists"
          fi
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build for Android (Development)
        run: npx eas-cli build --platform android --profile development --non-interactive --no-wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        continue-on-error: true

      - name: Build for iOS (Development)
        run: npx eas-cli build --platform ios --profile development --non-interactive --no-wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        continue-on-error: true

  deploy:
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          # Disable cache due to legacy-peer-deps conflicts
          # cache: "npm"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build for web
        run: npm run build:web

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: "./dist"
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
